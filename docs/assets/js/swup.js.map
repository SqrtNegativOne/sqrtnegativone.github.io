{
  "version": 3,
  "sources": ["../../../node_modules/@swup/plugin/src/versionSatisfies.ts", "../../../node_modules/@swup/plugin/src/index.ts", "../../../node_modules/@swup/plugin/src/pluginRequirements.ts", "../../../node_modules/@swup/theme/src/index.ts", "../../../node_modules/@swup/fade-theme/src/index.js", "../../../src/assets/js/swup.js"],
  "sourcesContent": ["type Comparator = '>' | '>=' | '<' | '<=';\n\n// Fill versions to exactly 3 decimals\nexport const normalizeVersion = (version: string): string => {\n\treturn String(version)\n\t\t.split('.')\n\t\t.map(segment => String(parseInt(segment || '0', 10)))\n\t\t.concat(['0', '0'])\n\t\t.slice(0, 3)\n\t\t.join('.');\n};\n\n// Numerically compare version strings after normalizing them\nexport const compareVersion = (a: string, b: string): number => {\n\ta = normalizeVersion(a);\n\tb = normalizeVersion(b);\n\treturn a.localeCompare(b, undefined, { numeric: true });\n};\n\n// Apply a comparator (equals, greater-than, etc) by its symbol to a sort comparison\nconst applyComparator = (comparisonResult: number, comparator: Comparator) => {\n\tconst comparators = {\n\t\t'': (r: number) => r === 0,\n\t\t'>': (r: number) => r > 0,\n\t\t'>=': (r: number) => r >= 0,\n\t\t'<': (r: number) => r < 0,\n\t\t'<=': (r: number) => r <= 0\n\t};\n\tconst comparatorFn = comparators[comparator] || comparators[''];\n\treturn comparatorFn(comparisonResult);\n};\n\n/**\n * Check if a version satisfies all given version requirements\n *\n * versionSatisfies('2.1.0', ['>=2', '<4']) // true\n * versionSatisfies('2.1.0', ['5']) // false\n *\n * @param {string} installed Installed version\n * @param {Array.<string>} requirements Array of requirements that must be satisfied\n * @returns boolean\n */\nexport const versionSatisfies = (installed: string, requirements: string[]) => {\n\treturn requirements.every((required) => {\n\t\tconst [, comparator, version] = required.match(/^([\\D]+)?(.*)$/) || [];\n\t\tconst comparisonResult = compareVersion(installed, version);\n\t\treturn applyComparator(comparisonResult, (comparator as Comparator) || '>=');\n\t});\n};\n", "import type Swup from 'swup';\nimport type { Plugin, HookName, HookOptions, HookUnregister, Handler } from 'swup';\nimport { checkDependencyVersion } from './pluginRequirements.js';\n\nfunction isBound(func: Function) {\n\treturn func.name.startsWith('bound ') && !func.hasOwnProperty('prototype');\n}\n\nexport default abstract class SwupPlugin implements Plugin {\n\t/** Name of the plugin */\n\tabstract name: string;\n\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true = true;\n\n\t// Swup instance, assigned by swup itself\n\tswup!: Swup;\n\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]> = {};\n\n\t// List of hook handlers to unregister on unmount\n\tprivate handlersToUnregister: HookUnregister[] = [];\n\n\t/** Run on mount */\n\tmount() {\n\t\t// this is mount method rewritten by class extending\n\t\t// and is executed when swup is enabled with plugin\n\t}\n\n\t/** Run on unmount */\n\tunmount() {\n\t\t// this is unmount method rewritten by class extending\n\t\t// and is executed when swup with plugin is disabled\n\n\t\t// Unsubscribe all registered hook handlers\n\t\tthis.handlersToUnregister.forEach((unregister) => unregister());\n\t\tthis.handlersToUnregister = [];\n\t}\n\n\t_beforeMount(): void {\n\t\tif (!this.name) {\n\t\t\tthrow new Error('You must define a name of plugin when creating a class.');\n\t\t}\n\t}\n\n\t_afterUnmount(): void {\n\t\t// here for any future hidden auto-cleanup\n\t}\n\n\t_checkRequirements(): boolean {\n\t\tif (typeof this.requires !== 'object') {\n\t\t\treturn true;\n\t\t}\n\n\t\tObject.entries(this.requires).forEach(([dependency, versions]) => {\n\t\t\tversions = Array.isArray(versions) ? versions : [versions];\n\t\t\tif (!checkDependencyVersion(dependency, versions, this.swup)) {\n\t\t\t\tconst requirement = `${dependency} ${versions.join(', ')}`;\n\t\t\t\tthrow new Error(`Plugin version mismatch: ${this.name} requires ${requirement}`);\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t *\n\t * On plugin unmount, the handler will automatically be unregistered.\n\t * The handler function is lexically bound to the plugin instance for convenience.\n\t * @see swup.hooks.on\n\t */\n\tprotected on<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\thandler = !isBound(handler) ? handler.bind(this) : handler;\n\t\tconst unregister = this.swup.hooks.on(hook, handler, options);\n\t\tthis.handlersToUnregister.push(unregister);\n\t\treturn unregister;\n\t}\n\n\tprotected once<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\tprotected before<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\tprotected replace<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\tprotected off<T extends HookName>(hook: T, handler?: Handler<T>): void {\n\t\treturn this.swup.hooks.off(hook, handler!);\n\t}\n}\n", "import type Swup from 'swup';\n\nimport { versionSatisfies } from './versionSatisfies.js';\n\nfunction getInstalledDependencyVersion(dependency: string, swup: Swup): string {\n\tif (dependency === 'swup') {\n\t\treturn swup.version ?? '';\n\t} else {\n\t\t// Circular type dependency?\n\t\t// findPlugin returns swup's Plugin type which is not up-to-date\n\t\t// with the actual Plugin type from index.ts\n\t\tconst plugin = swup.findPlugin(dependency);\n\t\treturn plugin?.version ?? '';\n\t}\n}\n\nexport function checkDependencyVersion(\n\tdependency: string,\n\trequirements: string[],\n\tswup: Swup\n): boolean {\n\tconst version = getInstalledDependencyVersion(dependency, swup);\n\tif (version) {\n\t\treturn versionSatisfies(version, requirements);\n\t} else {\n\t\treturn false;\n\t}\n}\n", "import Plugin from '@swup/plugin';\n\nexport default abstract class Theme extends Plugin {\n\t_originalAnimationSelectorOption: string = '';\n\t_addedStyleElements: Element[] = [];\n\t_addedHTMLContent: Element[] = [];\n\t_classNameAddedToElements: ({ selector: string, name: string })[] = [];\n\n\t_beforeMount() {\n\t\t// Store original animationSelector option, then replace it\n\t\tthis._originalAnimationSelectorOption = String(this.swup.options.animationSelector);\n\t\tthis.swup.options.animationSelector = '[class*=\"swup-transition-\"]';\n\n\t\t// Add classes after each content replace\n\t\tthis.swup.hooks.on('content:replace', this._addClassNameToElement);\n\t}\n\n\t_afterUnmount() {\n\t\t// Restore original animationSelector option\n\t\tthis.swup.options.animationSelector = this._originalAnimationSelectorOption;\n\n\t\t// Remove added styles\n\t\tthis._addedStyleElements.forEach((element) => {\n\t\t\telement.outerHTML = '';\n\t\t});\n\t\tthis._addedStyleElements = [];\n\n\t\t// Remove added HTML\n\t\tthis._addedHTMLContent.forEach((element) => {\n\t\t\telement.outerHTML = '';\n\t\t});\n\t\tthis._addedHTMLContent = [];\n\n\t\t// Remove added classnames\n\t\tthis._classNameAddedToElements.forEach((item) => {\n\t\t\tconst elements = Array.from(document.querySelectorAll(item.selector));\n\t\t\telements.forEach((element) => {\n\t\t\t\telement.className.split(' ').forEach((classItem) => {\n\t\t\t\t\tif (new RegExp('^swup-transition-').test(classItem)) {\n\t\t\t\t\t\telement.classList.remove(classItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tthis.swup.hooks.off('content:replace', this._addClassNameToElement);\n\t}\n\n\tapplyStyles(styles: string) {\n\t\tconst style = document.createElement('style');\n\t\tstyle.setAttribute('data-swup-theme', '');\n\t\tstyle.appendChild(document.createTextNode(styles));\n\t\tdocument.head.prepend(style);\n\n\t\tthis._addedStyleElements.push(style);\n\t}\n\n\tapplyHTML(content: string) {\n\t\tconst element = document.createElement('div');\n\t\telement.innerHTML = content;\n\t\tdocument.body.appendChild(element);\n\n\t\tthis._addedHTMLContent.push(element);\n\t}\n\n\taddClassName(selector: string, name: string) {\n\t\t// save so it can be later removed\n\t\tthis._classNameAddedToElements.push({ selector, name });\n\n\t\t// add class the first time\n\t\tthis._addClassNameToElement();\n\t}\n\n\t_addClassNameToElement = () => {\n\t\tthis._classNameAddedToElements.forEach((item) => {\n\t\t\tconst elements = Array.from(document.querySelectorAll(item.selector));\n\t\t\telements.forEach((element) => {\n\t\t\t\telement.classList.add(`swup-transition-${item.name}`);\n\t\t\t});\n\t\t});\n\t};\n}\n", "import Theme from '@swup/theme';\nimport styles from './index.css';\n\nexport default class SwupFadeTheme extends Theme {\n\tname = 'SwupFadeTheme';\n\n\tdefaults = {\n\t\tmainElement: '#swup'\n\t};\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\t\tthis.options = { ...this.defaults, ...options };\n\t}\n\n\tmount() {\n\t\tthis.applyStyles(styles);\n\t\tthis.addClassName(this.options.mainElement, 'main');\n\t}\n}\n", "import SwupFadeTheme from '@swup/fade-theme';\r\nconst swup = new Swup({\r\n  plugins: [new SwupFadeTheme()]\r\n});\r\nswup.hooks.on('visit:start', () => {\r\n  console.log(window.location.href);\r\n})"],
  "mappings": "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",
  "names": ["normalizeVersion", "version", "String", "split", "map", "segment", "parseInt", "concat", "slice", "join", "SwupPlugin", "constructor", "this", "isSwupPlugin", "swup", "requires", "handlersToUnregister", "mount", "unmount", "forEach", "unregister", "_beforeMount", "name", "Error", "_afterUnmount", "_checkRequirements", "Object", "entries", "dependency", "versions", "requirements", "_swup$version", "_plugin$version", "plugin", "findPlugin", "versionSatisfies", "installed", "every", "required", "comparator", "match", "compareVersion", "a", "b", "applyComparator", "comparisonResult", "comparators", "r", "localeCompare", "numeric", "Array", "isArray", "requirement", "on", "hook", "handler", "options", "func", "startsWith", "hasOwnProperty", "bind", "hooks", "push", "once", "_extends", "before", "replace", "off", "Theme", "Plugin", "constructor", "args", "this", "_originalAnimationSelectorOption", "_addedStyleElements", "_addedHTMLContent", "_classNameAddedToElements", "_addClassNameToElement", "forEach", "item", "Array", "from", "document", "querySelectorAll", "selector", "element", "classList", "add", "name", "_beforeMount", "String", "swup", "options", "animationSelector", "hooks", "on", "_afterUnmount", "outerHTML", "className", "split", "classItem", "RegExp", "test", "remove", "off", "applyStyles", "styles", "style", "createElement", "setAttribute", "appendChild", "createTextNode", "head", "prepend", "push", "applyHTML", "content", "innerHTML", "body", "addClassName", "SwupFadeTheme", "Theme", "constructor", "options", "super", "this", "name", "defaults", "mainElement", "_extends", "mount", "applyStyles", "addClassName", "n"]
}
